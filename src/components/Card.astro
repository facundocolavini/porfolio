---
import { twMerge } from 'tailwind-merge';
import type { Project } from '@/interfaces/types';
import Pill from './Pill.astro';
import { Icon } from 'astro-icon/components';

interface Props {
  project: Project;
}

// Desestructuración del objeto `project`, asegurando que `isReversed` tenga un valor por defecto.
const { project } = Astro.props;
const { title, description, image, previewUrl, tags, icons, pillClass, showBtnCode, isReversed = false, bgGradient } = project;
---

<div class="relative flex items-center justify-center p-4">
  <!-- Gradient Background -->
  <div 
    class={twMerge(`absolute inset-0 -left-[30%] top-20 object-cover ${bgGradient} blur-[80px] md:w-full h-[350px] lg:inset-0 md:h-[350px] md:place-content-center lg:h-full w-full -z-20`)}
    aria-hidden="true">
  </div>

  <div class="relative w-full max-w-5xl bg-[#1E1E2E]/30 rounded-3xl border-[#808080] border p-8 shadow-lg z-1">
    <div class="flex flex-col lg:grid lg:grid-cols-2 gap-8 items-center">
      
      <!-- Imagen (Siempre arriba en pantallas pequeñas) -->
      <div class={twMerge(
        "w-full", 
        isReversed ? "lg:order-2" : "lg:order-1"
      )}>
        <div class="relative w-full h-auto max-h-[400px] flex items-center justify-center">
          <img src={`${image}`}
            class="rounded-lg inset-5 drop-shadow-lg object-contain h-full z-1"
            alt={title}
          />
        </div>
      </div>

      <!-- Contenido (Texto y Título) -->
      <div class={twMerge(
        "text-white flex-1 z-4",
        isReversed ? "lg:order-1" : "lg:order-2"
      )}>
        <h1 class="text-2xl md:text-3xl lg:text-2xl font-bold mb-4">{title}</h1>
        <div class="flex gap-2 mb-4 flex-wrap">
          {
            tags.map((tag, index) => (
              <Pill class={twMerge(`rounded-full flex items-center object-fill gap-2 px-3 py-1`,
                pillClass ? pillClass[index] : '')}>
                { icons[index] && <Icon name={icons[index].toLowerCase()} class={`size-4 object-cover aspect-square`}/>}
                {tag}
              </Pill>
            ))
          }
        </div>
        <p class="text-base mb-6 space-y-2">
          {description}
          
        </p>
        <div class="flex gap-2 mt-5">
          {showBtnCode && <Pill variant="secondary" href="#" >
            <Icon name={'brand-github'} class="size-4"/>
            Code
          </Pill>}
          <Pill href={previewUrl} variant="white">
            <Icon name={'link'} class="size-4"/>
            Preview
          </Pill>
        </div>
      </div>

    </div>
  </div>
</div>
